<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>roart</groupId>
  <artifactId>myweb</artifactId>
  <!--artifactId>disksearchengine</artifactId-->
  <!--artifactId>akashic-disk-search-engine</artifactId-->
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Vaadin Web Application</name>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
	<version>2.3.2</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
	  <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>tomcat-maven-plugin</artifactId>
	<version>1.2-SNAPSHOT</version>
	<configuration>
	  <!--url>http://192.168.1.7:8080/manager</url-->
	  <server>mytomcat</server>
	  <!--path>/mywebapp</path-->
	</configuration>
      </plugin>
      <!--plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
	<version>7.0.0.pre5</version>
	<configuration>
	  <systemproperties>
	    <systemproperty>
	      <name>org.apache.commons.logging.Log</name>
	      <value>
		org.apache.commons.logging.impl.Log4JLogger
	      </value>
	    </systemproperty>
	    <systemproperty>
	      <name>slf4j</name>
	      <value>false</value>
	    </systemproperty>
	    <systemproperty>
	      <name>log4j.configuration</name>
	      <value>file:./src/main/resources/log4j.properties</value>
	    </systemproperty>
	  </systemproperties>
	</configuration>
      </plugin-->
      <plugin>
	<artifactId>maven-clean-plugin</artifactId>
	<version>2.4.1</version>
	<configuration>
	  <filesets>
	    <fileset>
	      <directory>src/main/webapp/VAADIN/widgetsets</directory>
	    </fileset>
	  </filesets>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-war-plugin</artifactId>
	<version>2.2</version>
	<configuration>
	  <failOnMissingWebXml>false</failOnMissingWebXml>
	</configuration>
      </plugin>
      <plugin>
	<groupId>com.vaadin</groupId>
	<artifactId>vaadin-maven-plugin</artifactId>
	<version>${vaadin.plugin.version}</version>
	<configuration>
	  <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
	  <!-- <runTarget>mobilemail</runTarget> -->
	  <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
	       way compatible with Vaadin eclipse plugin. -->
	  <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </webappDirectory>
	  <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </hostedWebapp>
	  <!-- Most Vaadin apps don't need this stuff, guide that to target -->
	  <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
	  <deploy>${project.build.directory}/gwt-deploy</deploy>
	  <!-- Compile report is not typically needed either, saves hunreds of mb disk -->
	  <compileReport>false</compileReport>
	  <noServer>true</noServer>
	  <!-- Remove draftCompile when project is ready -->
	  <draftCompile>false</draftCompile>
	  
	  <style>OBF</style>
	  <strict>true</strict>
	  <runTarget>http://localhost:8080/</runTarget>
	  <!-- not from the generated pom -->
	  <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
	</configuration>
	<executions>
	  <execution>
	    <configuration>
	      <!-- if you don't specify any modules, the plugin will find them -->
	      <!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
		   </modules> -->
	    </configuration>
	    <goals>
	      <goal>clean</goal>
	      <goal>resources</goal>
	      <goal>update-theme</goal>
	      <goal>update-widgetset</goal>
	      <goal>compile-theme</goal>
	      <goal>compile</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.mortbay.jetty</groupId>
	<artifactId>jetty-maven-plugin</artifactId>
	<!--version>${jetty.version}</version-->
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
           <!-- Associate the read-project-properties goal with the initialize phase, to read the properties file. -->
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>myweb.prop</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.2</version>
        <executions>
            <execution>
                <phase>prepare-package</phase>
                <goals>
                    <goal>replace</goal>
                </goals>
            </execution>
        </executions>
        <configuration>
          <includes>
            <include>target/**/hibernate.cfg.xml</include>
            <include>target/**/log4j.properties</include>
	  </includes>
            <replacements>
                <replacement>
                    <token>@h2dir@</token>
                    <value>${h2dir}</value>
                </replacement>
                <replacement>
                    <token>@logdir@</token>
                    <value>${logdir}</value>
                </replacement>
            </replacements>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>1.0.0</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>com.vaadin</groupId>
		    <artifactId>
		      vaadin-maven-plugin
		    </artifactId>
		    <versionRange>
		      [7.3.1,)
		    </versionRange>
		    <goals>
		      <goal>resources</goal>
		      <goal>update-widgetset</goal>
		      <goal>compile</goal>
		      <goal>update-theme</goal>
		      <goal>compile-theme</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore></ignore>
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>
	  </configuration>
	</plugin>
	<plugin>
	  <artifactId>maven-eclipse-plugin</artifactId>
	  <configuration>
	    <wtpversion>2.0</wtpversion>
	    <additionalProjectnatures>
	      <projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
	    </additionalProjectnatures>
	    <additionalBuildcommands>
	      <buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
	      <buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
	    </additionalBuildcommands>
	  </configuration>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencies>
    <!--dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>6.0</version>
      <scope>provided</scope>
    </dependency-->

    <!-- standard.jar --> 
    <!--dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency-->
 
    <!-- JSTL --> 
    <!--dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.1.2</version>
    </dependency-->

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-analyzers-common</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-queryparser</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-demo</artifactId>
      <version>${lucene.version}</version>
    </dependency>
    <!--dependency>
      <groupId>lucene</groupId>
      <artifactId>lucene</artifactId>
      <version>1.4.3</version>
    </dependency-->
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <!--dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate</artifactId>
      <version>${hibernate.version}</version>
      <type>pom</type>
    </dependency-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <!--dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <version>${hibernate.version}</version>
    </dependency-->
    <!--dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>3.5.6-Final</version>
    </dependency-->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>2.6.9</version>
    </dependency>
    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo-api</artifactId>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>ejb3-persistence</artifactId>
      <version>3.3.2.Beta1</version>
    </dependency>
    <!--dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.7.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <version>10.7.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbynet</artifactId>
      <version>10.7.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbytools</artifactId>
      <version>10.7.1.1</version>
    </dependency-->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>
    <!--dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.7</version>
    </dependency>	   
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <!--dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-langdetect</artifactId>
      <version>3.5.0</version>
    </dependency-->
    <dependency>
      <groupId>com.cybozu.labs</groupId>
      <artifactId>langdetect</artifactId>
      <version>1.1-20120112</version>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${solr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <!--dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
      <version>1.0.3</version>
    </dependency-->
    <!--dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jsp-2.1</artifactId>
      <version>6.1.5</version>
      <scope>test</scope>
    </dependency-->
    <!--dependency>
      <groupId>com.google.code.maven-play-plugin.org.apache.thrift</groupId>
      <artifactId>thrift</artifactId>
      <version>0.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>thrift</artifactId>
      <version>0.2.0</version>
    </dependency-->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
		<!--
		  Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).
		  
		  For widgetset compilation, vaadin-client-compiler is automatically added on the
		  compilation classpath by vaadin-maven-plugin so normally there is no need for an
		  explicit dependency.
		-->
		<!--
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		-->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadin.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <!--dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-maven-plugin</artifactId>
      <version>${jetty.version}</version>
    </dependency-->
  </dependencies>
  <properties>
    <jetty.version>9.2.2.v20140723</jetty.version>
    <jdk.version>1.7</jdk.version>
    <lucene.version>4.10.0</lucene.version>
    <solr.version>4.10.0</solr.version>
    <!--hbase.version>0.90.4</hbase.version-->
    <hbase.version>0.98.6.1-hadoop2</hbase.version>
    <!--hbase.version>0.98.5-hadoop2</hbase.version-->
    <tika.version>1.6</tika.version>
    <dbunit.dataTypeFactoryName>org.dbunit.ext.h2.H2DataTypeFactory</dbunit.dataTypeFactoryName>
    <hibernate.version>4.3.6.Final</hibernate.version>
    <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
    <hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
    <h2.version>1.3.176</h2.version>
    <jdbc.groupId>com.h2database</jdbc.groupId>
    <jdbc.artifactId>h2</jdbc.artifactId>
    <jdbc.version>1.3.160</jdbc.version>
    <jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
    <jdbc.url><![CDATA[jdbc:h2:${h2dir}]]>
    </jdbc.url>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>7.3.1</vaadin.version>
    <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
    <gwt.version>2.3.0</gwt.version>
    <gwt.plugin.version>2.2.0</gwt.plugin.version>
  </properties>
	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

  <profiles>
    <profile>
      <id>secret</id>
      <properties>
        <user.showsecret>1</user.showsecret>
      </properties>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <version>2.5</version>
	    <configuration>
	      <systemPropertyVariables>
		<user.showsecret>1</user.showsecret>
	      </systemPropertyVariables>
	    </configuration>
	  </plugin>
	</plugins>
      </build>
    </profile>
  </profiles>
</project>

