<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>roart</groupId>
    <artifactId>aether</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>0.10-SNAPSHOT</version>
  </parent>
  <groupId>roart</groupId>
  <!--artifactId>myweb</artifactId-->
  <artifactId>aether-web</artifactId>
  <!--artifactId>disksearchengine</artifactId-->
  <!--artifactId>akashic-disk-search-engine</artifactId-->
  <version>0.10-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Aether Disk Search Engine Web</name>
  <!--name>Vaadin Web Application</name-->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
	<version>${mavencompiler.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
	  <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>tomcat-maven-plugin</artifactId>
	<version>1.2-SNAPSHOT</version>
	<configuration>
	  <!--url>http://192.168.1.7:8080/manager</url-->
	  <server>mytomcat</server>
	  <!--path>/mywebapp</path-->
	</configuration>
      </plugin>
      <plugin>
	<artifactId>maven-clean-plugin</artifactId>
	<version>2.4.1</version>
	<configuration>
	  <filesets>
	    <fileset>
	      <directory>src/main/webapp/VAADIN/widgetsets</directory>
	    </fileset>
	  </filesets>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-war-plugin</artifactId>
	<version>2.2</version>
	<configuration>
	  <failOnMissingWebXml>false</failOnMissingWebXml>
	</configuration>
      </plugin>
      <plugin>
	<groupId>com.vaadin</groupId>
	<artifactId>vaadin-maven-plugin</artifactId>
	<version>${vaadin.plugin.version}</version>
	<configuration>
	  <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
	  <!-- <runTarget>mobilemail</runTarget> -->
	  <!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
	       way compatible with Vaadin eclipse plugin. -->
	  <webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </webappDirectory>
	  <hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
	  </hostedWebapp>
	  <!-- Most Vaadin apps don't need this stuff, guide that to target -->
	  <persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
	  <deploy>${project.build.directory}/gwt-deploy</deploy>
	  <!-- Compile report is not typically needed either, saves hunreds of mb disk -->
	  <compileReport>false</compileReport>
	  <noServer>true</noServer>
	  <!-- Remove draftCompile when project is ready -->
	  <draftCompile>false</draftCompile>
	  
	  <style>OBF</style>
	  <strict>true</strict>
	  <runTarget>http://localhost:8080/</runTarget>
	  <!-- not from the generated pom -->
	  <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
	</configuration>
	<executions>
	  <execution>
	    <goals>
	      <goal>clean</goal>
	      <goal>resources</goal>
	      <goal>update-theme</goal>
	      <goal>update-widgetset</goal>
	      <goal>compile-theme</goal>
	      <goal>compile</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.mortbay.jetty</groupId>
	<artifactId>jetty-maven-plugin</artifactId>
	<version>${jetty.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
      </plugin>
      <!-- we need to include ourselves in spark setJars -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
	<executions>
	  <execution>
	    <id>make-a-jar</id>
	    <phase>compile</phase>
	    <goals>
	      <goal>jar</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-install-plugin</artifactId>
	<version>2.4</version>
	<configuration>
	  <skip>true</skip>
	</configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
	<plugin>
	  <groupId>org.eclipse.m2e</groupId>
	  <artifactId>lifecycle-mapping</artifactId>
	  <version>1.0.0</version>
	  <configuration>
	    <lifecycleMappingMetadata>
	      <pluginExecutions>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>com.vaadin</groupId>
		    <artifactId>
		      vaadin-maven-plugin
		    </artifactId>
		    <versionRange>
		      [7.3.1,)
		    </versionRange>
		    <goals>
		      <goal>resources</goal>
		      <goal>update-widgetset</goal>
		      <goal>compile</goal>
		      <goal>update-theme</goal>
		      <goal>compile-theme</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore></ignore>
		  </action>
		</pluginExecution>
		<pluginExecution>
		  <pluginExecutionFilter>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>properties-maven-plugin</artifactId>
		    <versionRange>[1.0-alpha-2,)</versionRange>
		    <goals>
		      <goal>read-project-properties</goal>
		    </goals>
		  </pluginExecutionFilter>
		  <action>
		    <ignore></ignore>
		  </action>
		</pluginExecution>
	      </pluginExecutions>
	    </lifecycleMappingMetadata>
	  </configuration>
	</plugin>
	<plugin>
	  <artifactId>maven-eclipse-plugin</artifactId>
	  <configuration>
	    <wtpversion>2.0</wtpversion>
	    <additionalProjectnatures>
	      <projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
	    </additionalProjectnatures>
	    <additionalBuildcommands>
	      <buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
	      <buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
	    </additionalBuildcommands>
	  </configuration>
	</plugin>
      </plugins>
    </pluginManagement>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <version>${tika.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>	   
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>com.cybozu.labs</groupId>
      <artifactId>langdetect</artifactId>
      <version>1.1-20120112</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadin.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${apachelog.version}</version>
      <!--scope>test</scope-->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${apachelog.version}</version>
      <!--scope>test</scope-->
    </dependency>
    <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>${netty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.6</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-searchengine</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-machinelearning</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-config</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-model</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-filesystem</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-database</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-synchronization</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-eureka</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>roart</groupId>
      <artifactId>aether-common-service</artifactId>
      <version>${aether.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-netflix-core</artifactId>
      <version>1.0.0.RELEASE</version>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
	<enabled>false</enabled>
      </releases>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
	<enabled>false</enabled>
      </releases>
      <snapshots>
	<enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>secret</id>
      <properties>
        <user.showsecret>1</user.showsecret>
      </properties>
      <build>
	<plugins>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-surefire-plugin</artifactId>
	    <version>2.5</version>
	    <configuration>
	      <systemPropertyVariables>
		<user.showsecret>1</user.showsecret>
	      </systemPropertyVariables>
	    </configuration>
	  </plugin>
	</plugins>
      </build>
    </profile>
  </profiles>
</project>
